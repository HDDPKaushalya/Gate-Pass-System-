@page "/tables/delete"
@inject Getpass.Components.Data.AppDb DB
@using Getpass.Components.Data
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Tables</h4>
    <hr />
    @if (tables is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">DateOnly</dt>
            <dd class="col-sm-10">@tables.DateOnly</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">TimeRecived</dt>
            <dd class="col-sm-10">@tables.TimeRecived</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DName</dt>
            <dd class="col-sm-10">@tables.DName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Reason</dt>
            <dd class="col-sm-10">@tables.Reason</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Authorize by:</dt>
            <dd class="col-sm-10">@tables.Auth</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Vehicle Number:</dt>
            <dd class="col-sm-10">@tables.VNumber</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Destination:</dt>
            <dd class="col-sm-10">@tables.Dest</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Sign:</dt>
            <dd class="col-sm-10">@tables.Sign</dd>
        </dl>
        <EditForm method="post" Model="tables" OnValidSubmit="DeleteTables" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(tables is null)">Delete</button> |
            <a href="/tables">Back to List</a>
        </EditForm>
    }
</div>

@code {
    Tables? tables;

    [SupplyParameterFromQuery]
    public int VRn { get; set; }

    protected override async Task OnInitializedAsync()
    {
        tables = await DB.Tables.FirstOrDefaultAsync(m => m.VRn == VRn);

        if (tables is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteTables()
    {
        DB.Tables.Remove(tables!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/tables");
    }
}
